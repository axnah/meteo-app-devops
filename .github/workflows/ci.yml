# .github/workflows/ci.yml
name: CI/CD Pipeline MeteoApp

on:
  push:
    branches: [ "main" ] # Déclencher sur push sur la branche main
  pull_request:
    branches: [ "main" ] # Déclencher aussi sur les PR vers main

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest # Utiliser la dernière version d'Ubuntu

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Action pour récupérer le code

      - name: Setup Node.js
        uses: actions/setup-node@v4 # Action pour configurer Node.js
        with:
          node-version: '18' # Spécifier la version de Node.js
          cache: 'yarn' # Mettre en cache les dépendances yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests
        run: yarn test

  build-and-push-docker-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test # Ce job ne s'exécute que si le job 'test' a réussi

    # Ne s'exécute que sur un push sur la branche 'main' (pas sur les PR)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU # Nécessaire pour buildx pour multi-plateformes (optionnel mais bonne pratique)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx # Outil de build avancé de Docker
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Contexte de build (racine du projet)
          file: ./Dockerfile # Chemin vers le Dockerfile
          push: true # Pousser l'image
          tags: | # Tags pour l'image
            ${{ secrets.DOCKERHUB_USERNAME }}/meteo-app:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/meteo-app:${{ github.sha }} # Tag avec le SHA du commit
          # platforms: linux/amd64,linux/arm64 # Pour build multi-architectures (si besoin, ex: Mac M1/M2)